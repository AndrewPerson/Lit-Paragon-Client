:host {
    display: inline-block;
    width: 12vmin;
    height: 12vmin;
    position: relative;
    border-radius: 0.8rem;
    flex-shrink: 0;
}

:host(:hover:not(:host([editing]))) {
    background-color: var(--surface2);
    box-shadow: var(--shadow-colour) calc(var(--shadow-x) / 2) calc(var(--shadow-y) / 2) var(--shadow-spread);
}

:host(.selected) {
    background-color: var(--surface4) !important;
    box-shadow: var(--shadow-colour) calc(var(--shadow-x) / 2) calc(var(--shadow-y) / 2) var(--shadow-spread);
}

#handle {
    --size: 0.8rem;
    --padding: 0.8rem;

    --full-size: calc(calc(var(--padding) * 2) + var(--size));

    position: absolute;
    top: calc(50% - calc(var(--full-size) / 2));
    left: calc(calc(calc(3.3vmin - var(--size)) / 2) - var(--padding));

    display: block;

    height: var(--full-size);

    padding: var(--padding);

    box-sizing: border-box;

    cursor: move;
}

a {
    display: flex;
    flex-direction: column;

    border-radius: inherit;

    width: 12vmin;
    height: 12vmin;
}

a:focus-visible {
    box-shadow: inset 0 0 0 0.4rem var(--surface4), var(--shadow);
    outline: none;
}

:host(.selected) > a:focus-visible {
    box-shadow: inset 0 0 0 0.4rem var(--surface2), var(--shadow);
}

::slotted(*) {
    width: 5.4vmin;
    height: 5.4vmin;
    margin: auto;
    cursor: pointer;
    border-radius: inherit;
}

::slotted(img) {
    filter: invert(var(--img-invert)) hue-rotate(var(--hue-rotate));
}